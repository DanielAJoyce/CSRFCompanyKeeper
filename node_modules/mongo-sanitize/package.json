{
  "name": "mongo-sanitize",
  "version": "1.0.0",
  "description": "Helper to sanitize mongodb queries against query selector injections",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha test.js"
  },
  "keywords": [
    "mongodb",
    "sanitize",
    "query",
    "selector",
    "injection",
    "Petko"
  ],
  "devDependencies": {
    "body-parser": "1.6.5",
    "express": "4.8.5",
    "mocha": "1.21.4",
    "request": "2.40.0"
  },
  "author": {
    "name": "Valeri Karpov"
  },
  "license": "MIT",
  "readme": "mongo-sanitize\n==============\n\nFor the passionately lazy, a standalone module that sanitizes inputs against [query selector injection attacks](http://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html):\n\n```\nvar sanitize = require('mongo-sanitize');\n\n// The sanitize function will strip out any keys that start with '$' in the input,\n// so you can pass it to MongoDB without worrying about malicious users overwriting\n// query selectors.\nvar clean = sanitize(req.params.username);\n\nUsers.findOne({ name: clean }, function(err, doc) {\n  // ...\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "mongo-sanitize@1.0.0",
  "dist": {
    "shasum": "12bb22c621ecad90763aa52a7bb5a158fbab9b11"
  },
  "_from": "mongo-sanitize@",
  "_resolved": "https://registry.npmjs.org/mongo-sanitize/-/mongo-sanitize-1.0.0.tgz"
}
